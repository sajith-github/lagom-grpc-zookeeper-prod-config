play.application.loader = com.example.helloproxy.impl.HelloProxyLoader
play.http.secret.key = "lskdflkshdfgkjlhsdjkfhsdkljhfjklsdhf"
play.server.http.port = 9000
play.server.https.port = 9443
play.server.https.keyStore.path = conf/selfsigned.keystore
# pidfile.path = ${user.dir}/conf/RUNNING_PID
play.server.pidfile.path=/dev/null

akka.management {
  http {
    hostname = "127.0.0.1"
    port = 3002
    bind-hostname = "localhost"
    bind-port = ""
    base-path = ""

    routes {
      health-checks = "akka.management.HealthCheckRoutes"
    }
    route-providers-read-only = true

    preview.enable-http2 = on
  }

  # Health checks for readiness and liveness
  health-checks {
    # When exposting health checks via Akka Management, the path to expost readiness checks on
    readiness-path = "ready"
    # When exposting health checks via Akka Management, the path to expost readiness checks on
    liveness-path = "alive"
    # All readiness checks are executed in parallel and given this long before the check is timed out
    check-timeout = 1s
    readiness-checks {

    }
    liveness-checks {

    }
  }

}

akka.grpc.client {

  "helloworld.GreeterService" {
    # configure ssl to trust our self signed certificate
    host = localhost
    port = 8443

    # configure ssl to trust our self-signed certificate
    ssl-config {
      trustManager = {
        stores = [
          {type = "JKS", path = ${user.dir}/conf/selfsigned.keystore}
        ]
      }
    }
  }
}


lagom {
  discovery {
    zookeeper {
      server-hostname = "127.0.0.1"   # hostname or IP-address for the ZooKeeper server
      server-port     = 2181          # port for the ZooKeeper server
      uri-scheme      = "http"        # for example: http or https
      routing-policy  = "round-robin" # valid routing policies: first, random, round-robin
    }
  }
}
